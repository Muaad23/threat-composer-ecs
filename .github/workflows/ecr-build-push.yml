name: CI - Build & Push to ECR

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: tm-app
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Debug AWS vars
        run: |
          echo "AWS_ACCESS_KEY_ID length: ${#AWS_ACCESS_KEY_ID}"
          echo "AWS_SECRET_ACCESS_KEY length: ${#AWS_SECRET_ACCESS_KEY}"
          echo "Region: $AWS_REGION"
          aws sts get-caller-identity || echo "STS failed"        

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Test AWS Credentials
        run: aws sts get-caller-identity


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: docker build -t "$ECR_REPOSITORY:$IMAGE_TAG" ./app

      - name: Tag image
        run: |
          echo "REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          docker tag "$ECR_REPOSITORY:$IMAGE_TAG" "$REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}

      - name: Push image
        run: docker push "$REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}

      - name: Show pushed image
        run: echo Pushed "$REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
